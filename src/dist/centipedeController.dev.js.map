{"version":3,"sources":["centipedeController.js"],"names":["CentipedeController","x","y","width","height","tails","head","moveVertical","moveHorizontal","h_direction","xSpeed","count","total","i","newCentipedenew","Centipede","console","log","push","timeStamp","move","context","forEach","element","index","draw"],"mappings":";;;;;;;AAAA;;;;;;;;;;IACqBA,mB;;;AACnB,+BAAYC,CAAZ,EAAeC,CAAf,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAAA;;AAC/B,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,CAAC,KAAKL,CAAN,EAAS,KAAKC,CAAd,CAAZ;AACA,SAAKK,YAAL,GAAoB,KAApB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKN,KAAL,GAAaA,KAAb;AACA,SAAKO,MAAL,GAAc,GAAd;AACD;;;;oCAEeC,K,EAAO;AACrB,WAAKC,KAAL,GAAaD,KAAb;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2B,EAAEE,CAA7B,EAAgC;AAC9B,YAAIC,eAAe,GAAG,IAAIC,qBAAJ,CAAc,KAAKd,CAAL,GAASY,CAAC,GAAG,KAAKV,KAAhC,EAAuC,KAAKD,CAA5C,CAAtB;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACA,aAAKT,KAAL,CAAWa,IAAX,CAAgBJ,eAAhB;AACD;AACF;;;2BAEM;AACL,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKD,KAAzB,EAAgCC,CAAC,EAAjC,EAAqC;AACnC,aAAKR,KAAL,CAAWQ,CAAC,GAAG,CAAf,EAAkBZ,CAAlB,GAAsB,KAAKI,KAAL,CAAWQ,CAAX,EAAcZ,CAApC;AACA,aAAKI,KAAL,CAAWQ,CAAC,GAAG,CAAf,EAAkBX,CAAlB,GAAsB,KAAKG,KAAL,CAAWQ,CAAX,EAAcX,CAApC;AACD;AACF;;;2BAEMiB,S,EAAW;AAChB,WAAKC,IAAL;;AACA,UAAI,KAAKnB,CAAL,GAAS,KAAKE,KAAd,IAAuB,GAA3B,EAAgC;AAC9B,aAAKM,WAAL,GAAmB,CAAC,CAApB;AACA,aAAKP,CAAL,IAAU,KAAKE,MAAf;AACD;;AACD,UAAI,KAAKH,CAAL,GAAS,KAAKE,KAAd,IAAuB,CAA3B,EAA8B;AAC5B,aAAKM,WAAL,GAAmB,CAAnB;AACA,aAAKP,CAAL,IAAU,KAAKE,MAAf;AACD;;AACD,WAAKgB,IAAL;AACA,WAAKf,KAAL,CAAW,KAAKO,KAAL,GAAa,CAAxB,EAA2BX,CAA3B,IAAgC,KAAKQ,WAAL,GAAmB,KAAKN,KAAxD;AACA,WAAKF,CAAL,GAAS,KAAKI,KAAL,CAAW,KAAKO,KAAL,GAAa,CAAxB,EAA2BX,CAApC;AACA,WAAKI,KAAL,CAAW,KAAKO,KAAL,GAAa,CAAxB,EAA2BV,CAA3B,GAA+B,KAAKA,CAApC;AACD;;;yBAEImB,O,EAAS;AACZ,WAAKhB,KAAL,CAAWiB,OAAX,CAAmB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACrCD,QAAAA,OAAO,CAACE,IAAR,CAAaJ,OAAb;AACD,OAFD;AAGD","sourcesContent":["import Centipede from \"./centipede.js\";\r\nexport default class CentipedeController {\r\n  constructor(x, y, width, height) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.tails = [];\r\n    this.head = [this.x, this.y];\r\n    this.moveVertical = false;\r\n    this.moveHorizontal = true;\r\n    this.h_direction = 1;\r\n    this.width = width;\r\n    this.xSpeed = 100;\r\n  }\r\n\r\n  createCentipede(count) {\r\n    this.total = count;\r\n    for (let i = 0; i < count; ++i) {\r\n      let newCentipedenew = new Centipede(this.x + i * this.width, this.y);\r\n      console.log(newCentipedenew);\r\n      this.tails.push(newCentipedenew);\r\n    }\r\n  }\r\n\r\n  move() {\r\n    for (let i = 1; i < this.total; i++) {\r\n      this.tails[i - 1].x = this.tails[i].x;\r\n      this.tails[i - 1].y = this.tails[i].y;\r\n    }\r\n  }\r\n\r\n  update(timeStamp) {\r\n    this.move();\r\n    if (this.x + this.width == 800) {\r\n      this.h_direction = -1;\r\n      this.y += this.height;\r\n    }\r\n    if (this.x + this.width == 0) {\r\n      this.h_direction = 1;\r\n      this.y += this.height;\r\n    }\r\n    this.move();\r\n    this.tails[this.total - 1].x += this.h_direction * this.width;\r\n    this.x = this.tails[this.total - 1].x;\r\n    this.tails[this.total - 1].y = this.y;\r\n  }\r\n\r\n  draw(context) {\r\n    this.tails.forEach((element, index) => {\r\n      element.draw(context);\r\n    });\r\n  }\r\n}\r\n"],"file":"centipedeController.dev.js"}