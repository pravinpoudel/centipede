{"version":3,"sources":["inputHandler.js"],"names":["InputHandler","_classCallCheck","this","keys","handlers","addKey","bind","removeKey","clearKey","addCommandHandler","window","addEventListener","e","keyCode","key","console","log","method","timeStamp"],"mappings":"qeAAqBA,wBACnB,SAAAA,IAAcC,gBAAAC,KAAAF,GACZE,KAAKC,KAAO,GACZD,KAAKE,SAAW,GAEhBF,KAAKG,OAASH,KAAKG,OAAOC,KAAKJ,MAC/BA,KAAKK,UAAYL,KAAKK,UAAUD,KAAKJ,MACrCA,KAAKM,SAAWN,KAAKM,SAASF,KAAKJ,MAEnCA,KAAKO,kBAAoBP,KAAKO,kBAAkBH,KAAKJ,MACrDQ,OAAOC,iBAAiB,UAAWT,KAAKG,QACxCK,OAAOC,iBAAiB,QAAST,KAAKK,WACtCG,OAAOC,iBAAiB,OAAQT,KAAKM,8DAGhCI,GAdP,IAAAA,EAAAC,QAAcX,KAAAC,KAAAS,EAAAE,MAAA,EAiBS,IAAbF,EAAEC,UAhBVX,KAAKC,KAAOS,EAAZC,UAAA,qCAKKL,GAEAC,IAALG,EAAKH,eACEE,KAAAA,KAAAA,EAAPG,KAGD,IAAAF,EAAAC,gBAgBUX,KAAKC,KAAKS,EAAEC,4CATpBE,QAAAC,IAAA,qDAIEF,EAAHG,GACIF,QAAAC,IAAOF,EAAKX,GACfD,KAFDE,SAISU,GAACD,iCAIXK,GAcC,IAAK,IAAMJ,KAAOZ,KAAKC,KACVD,KAAKE,SAASU,IAAOZ,KAAKE,SAASU,GAAKI","file":"inputHandler.min.js","sourcesContent":["export default class InputHandler {\r\n  constructor() {\r\n    this.keys = {};\r\n    this.handlers = {};\r\n\r\n    this.addKey = this.addKey.bind(this);\r\n    this.removeKey = this.removeKey.bind(this);\r\n    this.clearKey = this.clearKey.bind(this);\r\n\r\n    this.addCommandHandler = this.addCommandHandler.bind(this);\r\n    window.addEventListener(\"keydown\", this.addKey);\r\n    window.addEventListener(\"keyup\", this.removeKey);\r\n    window.addEventListener(\"blur\", this.clearKey);\r\n  }\r\n\r\n  addKey(e) {\r\n    if(e.keyCode != 32)\r\n    this.keys[e.key] = true;\r\n    else if(e.keyCode == 32){\r\n      this.keys[e.keyCode] = true;\r\n    }\r\n  }\r\n\r\n  removeKey(e) {\r\n    if(e.keyCode != 32){\r\n        delete this.keys[e.key];\r\n    }\r\n\r\n    else if(e.keyCode == 32){\r\n      delete this.keys[e.keyCode];\r\n    }\r\n\r\n  }\r\n\r\n  clearKey(e) {\r\n    console.log(\"blurred\");\r\n    // this.keys = {};\r\n    // this.handlers = {};\r\n  }\r\n\r\n  addCommandHandler(key, method) {\r\n    console.log(key, method);\r\n    this.handlers[key] = method;\r\n  }\r\n\r\n  update(timeStamp) {\r\n    for (const key in this.keys) {\r\n      if ((this, this.handlers[key])) this.handlers[key](timeStamp);\r\n      else {\r\n        // console.log(\"press space to shoot\");\r\n        // console.warn(\"we only support WASD and key up-down-right-left\");\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}