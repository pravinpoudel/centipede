{"version":3,"sources":["bulletController.js"],"names":["BulletController","bullets","timerTillNextBullet","shoot","bind","x","y","speed","damage","delay","push","Bullet","bullet","width","height","deltaTime","forEach","update","context","console","log","length","index","isBulletOffScreen","splice","draw"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEqBA,gB;;;AACnB,8BAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,mBAAL,GAA2B,CAA3B;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;;;0BAEKC,C,EAAGC,C,EAAGC,K,EAAOC,M,EAAQC,K,EAAO;AAChC,UAAI,KAAKP,mBAAL,IAA4B,CAAhC,EAAmC;AACjC,aAAKD,OAAL,CAAaS,IAAb,CAAkB,IAAIC,kBAAJ,CAAWN,CAAX,EAAcC,CAAd,EAAiBC,KAAjB,EAAwBC,MAAxB,CAAlB;AACA,aAAKN,mBAAL,GAA2BO,KAA3B;AACD;;AACD,WAAKP,mBAAL;AACD;;;sCAEiBU,M,EAAQ;AACxB,aACEA,MAAM,CAACP,CAAP,IAAY,CAACO,MAAM,CAACC,KAApB,IACAD,MAAM,CAACP,CAAP,GAAW,GADX,IAEAO,MAAM,CAACN,CAAP,GAAW,GAFX,IAGAM,MAAM,CAACN,CAAP,IAAY,CAACM,MAAM,CAACE,MAJtB;AAMD;;;2BAEMC,S,EAAW;AAChB,WAAKd,OAAL,CAAae,OAAb,CAAqB,UAACJ,MAAD,EAAY;AAC/BA,QAAAA,MAAM,CAACK,MAAP;AACD,OAFD;AAGD;;;yBAEIC,O,EAAS;AAAA;;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,OAAL,CAAaoB,MAAzB;AACA,WAAKpB,OAAL,CAAae,OAAb,CAAqB,UAACJ,MAAD,EAASU,KAAT,EAAmB;AACtC,YAAI,KAAI,CAACC,iBAAL,CAAuBX,MAAvB,CAAJ,EAAoC;AAClC,UAAA,KAAI,CAACX,OAAL,CAAauB,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;;AACA;AACD;;AACDV,QAAAA,MAAM,CAACa,IAAP,CAAYP,OAAZ;AACD,OAND;AAOD","sourcesContent":["import Bullet from \"./bullet.js\";\r\n\r\nexport default class BulletController {\r\n  constructor() {\r\n    this.bullets = [];\r\n    this.timerTillNextBullet = 0;\r\n    this.shoot = this.shoot.bind(this);\r\n  }\r\n\r\n  shoot(x, y, speed, damage, delay) {\r\n    if (this.timerTillNextBullet <= 0) {\r\n      this.bullets.push(new Bullet(x, y, speed, damage));\r\n      this.timerTillNextBullet = delay;\r\n    }\r\n    this.timerTillNextBullet--;\r\n  }\r\n\r\n  isBulletOffScreen(bullet) {\r\n    return (\r\n      bullet.x <= -bullet.width ||\r\n      bullet.x > 800 ||\r\n      bullet.y > 800 ||\r\n      bullet.y <= -bullet.height\r\n    );\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.bullets.forEach((bullet) => {\r\n      bullet.update();\r\n    });\r\n  }\r\n\r\n  draw(context) {\r\n    console.log(this.bullets.length);\r\n    this.bullets.forEach((bullet, index) => {\r\n      if (this.isBulletOffScreen(bullet)) {\r\n        this.bullets.splice(index, 1);\r\n        return;\r\n      }\r\n      bullet.draw(context);\r\n    });\r\n  }\r\n}\r\n"],"file":"bulletController.dev.js"}