{"version":3,"sources":["utility.js"],"names":["distance","x1","y1","x2","y2","Math","sqrt","pow","doesIntersect","object1Min","object1Max","value","x","isInside","y","sound1","src","source","id","Audio","sounds","play"],"mappings":"aAAA,SAASA,SAASC,EAAIC,EAAIC,EAAIC,GAC5B,OAAOC,KAAKC,KAAKD,KAAKE,IAAIJ,EAAKF,EAAI,GAAKI,KAAKE,IAAIH,EAAKF,EAAI,IAC3D,SAAAM,cAAAC,EAAAC,EAAAC,GAQC,QANFF,EAASD,EAAAA,EAAcC,GACrBC,EAAcE,EACZH,EAAAA,GAIFA,EAAQI,EAARF,EAAAG,GACDJ,EAAAI,EAAAH,EAAAG,GAICC,SAAOC,UAAMC,EAAbC,GACA,IAAAH,EAAA,IAAAI,MAAA,OACDJ,EAAAC,IAAAC,EADQF,EAGTK,IAAMA,OAAN,GACAA,OAAM,MAAUC,UAAhB,qBAAAD,OAAM,MAAUC","file":"utility.min.js","sourcesContent":["function distance(x1, y1, x2, y2) {\r\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n}\r\n\r\nfunction doesIntersect(object1Min, object1Max, value) {\r\n  const isInside =\r\n    object1Min.x < value.x ||\r\n    object1Max.x > value.x ||\r\n    object1Min.y < value.y ||\r\n    object1Max.y > value.y;\r\n  return !isInside;\r\n}\r\n\r\nfunction loadSound(source, id) {\r\n  let sound1 = new Audio();\r\n  sound1.src = source;\r\n  return sound1;\r\n}\r\nconst sounds = {};\r\nsounds[\"shoot\"] = loadSound(\"audio/sound-1.mp3\");\r\nsounds[\"shoot\"].play();\r\n\r\n"]}