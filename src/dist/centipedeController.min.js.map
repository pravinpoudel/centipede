{"version":3,"sources":["centipedeController.js"],"names":["_centipede","_interopRequireDefault","require","CentipedeController","x","y","width","height","_classCallCheck","this","tails","head","moveVertical","moveHorizontal","h_direction","xSpeed","count","total","i","Centipede","console","log","newCentipedenew","push","move","context","element"],"mappings":"2FAAA,IAAAA,WAAAC,uBAAAC,QAAA,qeACqBC,+BACnB,SAAAA,EAAYC,EAAGC,EAAGC,EAAOC,GAAQC,gBAAAC,KAAAN,GAC/BM,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAKC,MAAQ,GACbD,KAAKE,KAAO,CAACF,KAAKL,EAAGK,KAAKJ,GAN9BI,KAAAG,cAAA,EAQIH,KAAKI,gBAAiB,EACtBJ,KAAKK,YAAc,EACnBL,KAAKH,MAAQA,EACbG,KAAKM,OAAS,iEAGAC,GACdP,KAAKQ,MAAQD,EACb,IAAK,IAAIE,EAAI,EAAGA,EAAIF,IAASE,EAAG,CAfff,IAAAA,EAgBO,IAAIgB,WAAAA,QAAUV,KAAKL,EAAIc,EAAIT,KAAKH,MAAOG,KAAKJ,GAClEe,QAAQC,IAAIC,GACZb,KAAKC,MAAMa,KAAKD,mCAdlB,IAAKZ,IAAAA,EAAQ,EAAbQ,EAAAT,KAAAQ,MAAAC,IACAT,KAAKE,MAAQO,EAAA,GAADd,EAASK,KAArBC,MAAAQ,GAAAd,EACAK,KAAKG,MAAAA,EAAL,GAAoBP,EAAAI,KAApBC,MAAAQ,GAAAb,mCA0BAI,KAAKe,OACDf,KAAKL,EAAIK,KAAKH,OAAS,MACzBG,KAAKK,aAAe,EACpBL,KAAKJ,GAAKI,KAAKF,QAEbE,KAAKL,EAAIK,KAAKH,OAAS,IAtB3BG,KAAKK,YAAY,EACfL,KAAAJ,GAAIiB,KAAAA,QAEJb,KAAAe,OACDf,KAAAC,MAAAD,KAAAQ,MAAA,GAAAb,GAAAK,KAAAK,YAAAL,KAAAH,MACFG,KAAAL,EAAAK,KAAAC,MAAAD,KAAAQ,MAAA,GAAAb,EAwBCK,KAAKC,MAAMD,KAAKQ,MAAQ,GAAGZ,EAAII,KAAKJ,+BArBpCoB,GACAhB,KAAAC,MAASQ,QAAQ,SAAAQ,EAAQT,GACvBS,EAAKhB,KAAMQ","file":"centipedeController.min.js","sourcesContent":["import Centipede from \"./centipede.js\";\r\nexport default class CentipedeController {\r\n  constructor(x, y, width, height) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.tails = [];\r\n    this.head = [this.x, this.y];\r\n    this.moveVertical = false;\r\n    this.moveHorizontal = true;\r\n    this.h_direction = 1;\r\n    this.width = width;\r\n    this.xSpeed = 100;\r\n  }\r\n\r\n  createCentipede(count) {\r\n    this.total = count;\r\n    for (let i = 0; i < count; ++i) {\r\n      let newCentipedenew = new Centipede(this.x + i * this.width, this.y);\r\n      console.log(newCentipedenew);\r\n      this.tails.push(newCentipedenew);\r\n    }\r\n  }\r\n\r\n  move() {\r\n    // console.log(JSON.stringify(this.tails));\r\n    for (let i = 1; i < this.total; i++) {\r\n      this.tails[i - 1].x = this.tails[i].x;\r\n      this.tails[i - 1].y = this.tails[i].y;\r\n    }\r\n    // console.log(JSON.stringify(this.tails));\r\n  }\r\n\r\n  update(timeStamp) {\r\n    this.move();\r\n    if (this.x + this.width == 800) {\r\n      this.h_direction = -1;\r\n      this.y += this.height;\r\n    }\r\n    if (this.x + this.width == 0) {\r\n      this.h_direction = 1;\r\n      this.y += this.height;\r\n    }\r\n    this.move();\r\n    this.tails[this.total - 1].x += this.h_direction * this.width;\r\n    this.x = this.tails[this.total - 1].x;\r\n    this.tails[this.total - 1].y = this.y;\r\n  }\r\n\r\n  draw(context) {\r\n    this.tails.forEach((element, index) => {\r\n      element.draw(context);\r\n    });\r\n  }\r\n}\r\n"]}